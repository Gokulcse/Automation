package pages;

import java.util.Properties;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import pageobjects.UnicomReferralRequestPO;
import pageobjects.UnicomReferralRequestPO;
import utilitymethods.UtilityMethods;
import driver.BaseDriver;

public class UnicomReferralRequest extends BaseDriver
{
	public static WebDriver driver ;
	public static Properties allInputValue;
	@BeforeTest
	public static void BrowserIntilation() throws Exception
	{
		allInputValue = UtilityMethods.getUnicomPropValues();
		driver = launchApp(allInputValue.getProperty("BaseURl")); // need to be verfifed
		driver.navigate().refresh();
	}
	@Test(priority=1)
	public static void validateOperatorLogo()
	{
		PageFactory.initElements(driver, UnicomReferralRequestPO.class);
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.UnicomLogo, "NotEqual","Bell Operator Logo in IoT Starter Kit");	
		UtilityMethods.Imagevalidation(UnicomReferralRequestPO.UnicomLogo,"src",allInputValue.getProperty("UnicomLogo"),"Bell Operator Logo");		
		System.out.println("RR001");
	} 
	
	@Test(priority=2)
	public static void validateCompanyLogo()
	{
		PageFactory.initElements(driver, UnicomReferralRequestPO.class);
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.CiscoLogo, "NotEqual","Cisco Jasper Company Logo in IoT Starter Kit");		
		UtilityMethods.Imagevalidation(UnicomReferralRequestPO.CiscoLogo,"src",allInputValue.getProperty("ciscoLogo"),"Cisco Jasper Company Logo");		
		System.out.println("RR002");
	}
 
	@Test(priority=3)
	public static void ReferralRequestTextValidation()
	{
		PageFactory.initElements(driver, UnicomReferralRequestPO.class);
		UtilityMethods.StringValidation(UnicomReferralRequestPO.SectionOneHead1.getText(), "Request a Referral Code", "equalsignorecase");
		UtilityMethods.StringValidation(UnicomReferralRequestPO.ParagraphText.getText(), allInputValue.getProperty("ReferralRequestSectionOne"), "equalsignorecase");
		UtilityMethods.StringValidation(UnicomReferralRequestPO.ContactInfoText.getText(), "Contact Information", "equalsignorecase");
		UtilityMethods.StringValidation(UnicomReferralRequestPO.DeviceInfoText.getText(), "Device Information", "equalsignorecase");
		System.out.println("RR003");
	}
	@Test(priority=4)
	public static void RequestReferralCodeTextBoxDisplayedAndEnabled()
	{
		PageFactory.initElements(driver, UnicomReferralRequestPO.class);
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.FirstNameInput, "NotEqual", "First Name Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.LastNameInput, "NotEqual", "Last Name Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.CompanyNameInput, "NotEqual", "Company Name Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.PositionRoleInput, "NotEqual", "Position/Role Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.PhoneNumberInput, "NotEqual", "Phone Number Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.EmailInput, "NotEqual", "E-mail Address Input Field");
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.ProvincesInput, "NotEqual", "Porvinces Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.ModuleInput, "NotEqual", "Module Name Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.BusinessInput, "NotEqual", "Business Type Drop Down Menu");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Sim2FFInput, "NotEqual", "2FF Sim Type Radio Button");			
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Sim3FFInput, "NotEqual", "3FF Sim Type Radio Button");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.SimNanoInput, "NotEqual", "Nano Sim Type Radio Button");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.VolumetoDeployInput, "NotEqual", "Volume to deploy Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.IN3MonthInput, "NotEqual", "Within 3 months Radio Button");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.IN6MonthInput, "NotEqual", "3-6 months Radio Button");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.IN12MonthInput, "NotEqual", "6-12 months Radio Button");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Morethan12MonthInput, "NotEqual", "More than 12 months/unknown Radio Button");
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Description, "NotEqual", "Description Input Field");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.CancelButton, "NotEqual", "Cancel Button");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.RequestButton, "NotEqual", "Request Button");	
		System.out.println("RR004");
	}

	@Test(priority=5)
	public static void RequestReferralCodeLabelTextDisplayedAndEnabled()
	{	
		PageFactory.initElements(driver, UnicomReferralRequestPO.class);
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.FirstNameLabel, "NotEqual", "First Name Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.LastNameLabel, "NotEqual", "Last Name Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.CompanyNameLabel, "NotEqual", "Company Name Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.PositionRoleLabel, "NotEqual", "Position/Role Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.PhoneNumberLabel, "NotEqual", "Phone Number Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.EmailLabel, "NotEqual", "E-mail Address Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.ProvincesLabel, "NotEqual", "Provinces Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.ModuleLabel, "NotEqual", "Module Name Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.BusinessLabel, "NotEqual", "Business TypeLabel Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.SimLabel, "NotEqual", "Sim Type Label Text");
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Sim2FFLabel, "NotEqual", "2FF Mini Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Sim3FFlabel, "NotEqual", "3FF Micro Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.SimNanolabel, "NotEqual", "3FF Micro Label Text");		
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.VolumetoDeployLabel, "NotEqual", "Volume to deploy Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.LastNameLabel, "NotEqual", "Launch Timeframe Label Text");
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.IN3MonthLabel, "NotEqual", "Within 3 months Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.IN6Monthlabel, "NotEqual", "3-6 months Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.IN12MonthLabel, "NotEqual", "6-12 months Label Text");	
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.Morethan12Monthlabel, "NotEqual", "More than 12 months/unknown Label Text");
		UtilityMethods.DisplayEnableValidator(UnicomReferralRequestPO.DescriptionLabel, "NotEqual", "Description Label Text");			
		System.out.println("RR005");
	}
}
